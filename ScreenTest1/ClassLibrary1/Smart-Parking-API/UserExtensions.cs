// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ClassLibrary1
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;

    /// <summary>
    /// Extension methods for User.
    /// </summary>
    public static partial class UserExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userID'>
            /// </param>
            public static object CheckUserAuthStatus(this IUser operations, string userID)
            {
                return Task.Factory.StartNew(s => ((IUser)s).CheckUserAuthStatusAsync(userID), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userID'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CheckUserAuthStatusAsync(this IUser operations, string userID, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CheckUserAuthStatusWithHttpMessagesAsync(userID, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
